<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-02T11:16:46.398Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux命令</title>
    <link href="http://yoursite.com/2018/12/01/linux%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/12/01/linux命令/</id>
    <published>2018-12-01T03:28:15.000Z</published>
    <updated>2018-12-02T11:16:46.398Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Dec 02 2018 20:49:23 GMT+0800 (CST) --><p>curl命令：该命令是一个利用url规则在命令行下工作的文件传输工具，支持文件的上传和下载。curl支持http、https、ftp等协议<br>语法<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl（选项）（参数）</span><br></pre></td></tr></table></figure><p></p><p>系统中没有curl可以使用yum install curl安装<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl url --slient （将下载文件输出到终端，所有的下载数据写入到stdout；--slient不显示进度信息）</span><br><span class="line">curl http://man.linuxde.net/test.iso -o filename.iso --progress（-o是将下载的数据写入到文件，必须使用文件的绝对路径；--progress显示进度条）</span><br></pre></td></tr></table></figure><p></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum [options] [command] [package...]</span><br><span class="line">options: 可选项，（-h帮助，-y当安装过程提示全部选择yes，-q不显示安装过程）</span><br><span class="line">yum -y install nodejs</span><br></pre></td></tr></table></figure><p>常用命令<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1. ls 列出文件或文件目录</span><br><span class="line">2. cd    切换目录</span><br><span class="line">3. mkdir       创建文件夹</span><br><span class="line">4. unzip ***.zip     解压 .zip文件到当前目录（若提示找不到命令unzip，需要执行yum install -y unzip zip）</span><br><span class="line">5. tar -xvf  ***.tar   解压 .tar文件到当前目录</span><br><span class="line">6. tar xvJf   ***.tar.xz   解压 .tar.xz文件到当前目录</span><br><span class="line">7. rm -r    文件夹名称       -f  文件夹名称    删除文件夹 </span><br><span class="line">8. rm   文件名      删除文件</span><br><span class="line">9. cat  文件名      查看文件内容</span><br><span class="line">10. vi 文件名      进入文件,按下 i 键 ，出现 -- INSERT-- 就可以编辑了,按esc之后输入:wq, 保存并退出编辑模式 </span><br><span class="line">11. lsof -i  tcp:端口号  查看端口号 被哪个进程占用 （yum install lsof）  kill -9 端口号   杀掉进程</span><br><span class="line">12. pwd 查看当前文件的目录</span><br><span class="line">13. lsb_release -a  获取linux操作系统</span><br><span class="line">14. df -h  磁盘空间</span><br><span class="line">15. echo $LANG    查看linux下当前使用语言命令</span><br><span class="line">16. sudo -i 切换root用户</span><br><span class="line">17. mv 文件名 移动目的地文件名 （移动文件、重命名文件）</span><br><span class="line">18. scp url root@192.168.0.127:/url 上传文件</span><br><span class="line">19. yum uninstall nodejs （卸载node）</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Dec 02 2018 20:49:23 GMT+0800 (CST) --&gt;&lt;p&gt;curl命令：该命令是一个利用url规则在命令行下工作的文件传输工具，支持文件的上传和下载。curl支持http、https、ftp等协议&lt;br&gt;语法&lt;br
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建个人博客</title>
    <link href="http://yoursite.com/2018/07/23/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/07/23/Hexo搭建个人博客/</id>
    <published>2018-07-22T22:10:48.000Z</published>
    <updated>2018-12-02T12:48:58.437Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun Dec 02 2018 20:49:23 GMT+0800 (CST) --><p>1 准备工作<br>. 有一个github账号<br>. 安装node.js<br>. 安装git</p><p>2 搭建github博客<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">新建一个名为 你的用户名.github.io 的仓库。</span><br></pre></td></tr></table></figure><p></p><p>3 配置SSH key<br>配置ssh key的原因：提交代码时需要将本地和远程仓库进行连接，直接使用用户名和密码不太安全。所以需要用ssh key解决本地和服务器连接的问题。<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ～/.ssh    检测本地已经存在的ssh密钥</span><br></pre></td></tr></table></figure><p></p><p>如果提示：不存在该文件夹，则说明是第一次使用github<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C   “邮件地址”</span><br></pre></td></tr></table></figure><p></p><p>（连续三次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开github主页，进入setting-&gt;SSH and GPG key -&gt;new ssh key）<br>此时，还需要配置：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config —-global  user.name “昵称”</span><br><span class="line">git config —-global  user.email  “邮箱”</span><br></pre></td></tr></table></figure><p></p><p>4 使用hexo编写个人博客<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装： npm install -g hexo</span><br><span class="line">初始化： npm init blog</span><br><span class="line">生成静态文件： hexo g</span><br><span class="line">启动服务器： hexo s</span><br><span class="line">部署到github： hexo d</span><br><span class="line">使用hexo d 的前提是安装了一个插件： npm install hexo-deployer-git –-save</span><br></pre></td></tr></table></figure><p></p><p>5 hexo 常见的口令<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new “” 新建文章</span><br><span class="line">hexo new page “” 新建页面</span><br><span class="line">hexo generate 生成静态文件到public目录</span><br><span class="line">hexo deploy 部署到github</span><br><span class="line">hexo version 查看hexo的版本号</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun Dec 02 2018 20:49:23 GMT+0800 (CST) --&gt;&lt;p&gt;1 准备工作&lt;br&gt;. 有一个github账号&lt;br&gt;. 安装node.js&lt;br&gt;. 安装git&lt;/p&gt;&lt;p&gt;2 搭建github博客&lt;br&gt;&lt;/p&gt;&lt;f
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
  </entry>
  
</feed>
